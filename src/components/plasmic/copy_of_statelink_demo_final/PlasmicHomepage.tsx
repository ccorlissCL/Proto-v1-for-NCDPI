// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: gcAUavbe6LhBtzYEg2txWt
// Component: lwuRafVLqVKA

import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Nav from "../../Nav"; // plasmic-import: lgnQeM1kw9xa/component
import TextInput from "../../TextInput"; // plasmic-import: YuHDzBMPb3i1/component
import SideToggle from "../../SideToggle"; // plasmic-import: 8W9EvuLG6LBf/component

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_copy_of_statelink_demo_final.module.css"; // plasmic-import: gcAUavbe6LhBtzYEg2txWt/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: lwuRafVLqVKA/css

import SearchsvgIcon from "./icons/PlasmicIcon__Searchsvg"; // plasmic-import: 9eml0Mmfqlxb/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: j5CuMsGiAbQJ/icon
import image4Z9O0QIBdeGa3 from "./images/image4.svg"; // plasmic-import: Z9o0qIBdeGa3/picture
import image15IJmmhJbeups1 from "./images/image15.svg"; // plasmic-import: IJmmhJBEUPS1/picture
import image6AiVeWuD5LDui from "./images/image6.svg"; // plasmic-import: AiVeWuD5LDui/picture
import image147BdNLcYgwIk from "./images/image14.svg"; // plasmic-import: 7BdN_lcYgwIk/picture
import image11N7KA0Dm3Cwt2 from "./images/image11.svg"; // plasmic-import: N7kA0dm3Cwt2/picture
import image16CTnF8PjtojKh from "./images/image16.svg"; // plasmic-import: cTnF8PjtojKH/picture
import image30BlhbWxFq7QL from "./images/image30.svg"; // plasmic-import: _BLHBWxFq7qL/picture
import image8FYp5HkqOtLr4 from "./images/image8.svg"; // plasmic-import: fYp5hkqOTLr4/picture
import image262Kph0N29SgEc from "./images/image26.svg"; // plasmic-import: 2KPH0n29sgEC/picture
import image29Q9YF8JPtFq1H from "./images/image29.svg"; // plasmic-import: q9yF8jPtFq1h/picture
import image13WgzCmtVwqgjl from "./images/image13.svg"; // plasmic-import: wgzCmtVwqgjl/picture
import image27HWJwoVuNJgw from "./images/image27.svg"; // plasmic-import: h_WJwoVuNJgw/picture
import image24Hb3JfGp1Djg from "./images/image24.svg"; // plasmic-import: HB3JFGp_1Djg/picture
import image25Kyf4Jntno0Pr from "./images/image25.svg"; // plasmic-import: KYF4JNTNO0pr/picture
import image23YelEhQmAAuTx from "./images/image23.svg"; // plasmic-import: YelEhQmAAuTX/picture
import image22YixFx3Mxbmn from "./images/image22.svg"; // plasmic-import: _YixFX3mxbmn/picture
import image31XhT8RZyvUdTb from "./images/image31.svg"; // plasmic-import: XhT8RZyvUdTB/picture
import image21DwUh4ZVzg99M from "./images/image21.svg"; // plasmic-import: DwUH4ZVzg99M/picture
import image18DRfd9AhsyuX from "./images/image18.svg"; // plasmic-import: dRFD9AHSYU-X/picture
import image95Vz9RNpzfmhM from "./images/image9.svg"; // plasmic-import: 5Vz9RNpzfmhM/picture
import image20JIqQXwL1Theq from "./images/image20.svg"; // plasmic-import: JIqQXwL1THEQ/picture
import image19F2OrtleMdwXl from "./images/image19.svg"; // plasmic-import: F2ortleMDWXl/picture

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  sideNav?: p.Flex<typeof Nav>;
  frame2976?: p.Flex<"div">;
  frame2975?: p.Flex<"div">;
  _?: p.Flex<"div">;
  textInput?: p.Flex<typeof TextInput>;
  frame2974?: p.Flex<"div">;
  frame2973?: p.Flex<"div">;
  plusCircle?: p.Flex<"div">;
  frame2977?: p.Flex<"div">;
  frame2960?: p.Flex<"div">;
  group2996?: p.Flex<"div">;
  caretDown?: p.Flex<"div">;
  filter?: p.Flex<"div">;
  recentlyUsed?: p.Flex<"div">;
  appTile2?: p.Flex<"div">;
  frame2964?: p.Flex<"div">;
  appTile3?: p.Flex<"div">;
  frame2965?: p.Flex<"div">;
  appTile4?: p.Flex<"div">;
  frame2966?: p.Flex<"div">;
  appTile7?: p.Flex<"div">;
  frame2969?: p.Flex<"div">;
  appTile5?: p.Flex<"div">;
  frame2967?: p.Flex<"div">;
  appTile6?: p.Flex<"div">;
  frame2968?: p.Flex<"div">;
  sectionTitle2?: p.Flex<"div">;
  frame2962?: p.Flex<"div">;
  group2998?: p.Flex<"div">;
  caretDown3?: p.Flex<"div">;
  filter3?: p.Flex<"div">;
  divider2?: p.Flex<"div">;
  earlyEducationApps2?: p.Flex<"div">;
  appTile14?: p.Flex<"div">;
  frame2978?: p.Flex<"div">;
  appTile15?: p.Flex<"div">;
  frame2982?: p.Flex<"div">;
  appTile16?: p.Flex<"div">;
  frame2983?: p.Flex<"div">;
  appTile17?: p.Flex<"div">;
  frame2984?: p.Flex<"div">;
  appTile18?: p.Flex<"div">;
  frame2985?: p.Flex<"div">;
  appTile19?: p.Flex<"div">;
  frame2986?: p.Flex<"div">;
  sectionTitle?: p.Flex<"div">;
  frame2961?: p.Flex<"div">;
  group2997?: p.Flex<"div">;
  caretDown2?: p.Flex<"div">;
  filter2?: p.Flex<"div">;
  divider?: p.Flex<"div">;
  earlyEducationApps3?: p.Flex<"div">;
  appTile20?: p.Flex<"div">;
  frame2987?: p.Flex<"div">;
  appTile21?: p.Flex<"div">;
  frame2988?: p.Flex<"div">;
  appTile22?: p.Flex<"div">;
  frame2989?: p.Flex<"div">;
  appTile23?: p.Flex<"div">;
  frame2990?: p.Flex<"div">;
  appTile24?: p.Flex<"div">;
  frame2991?: p.Flex<"div">;
  appTile25?: p.Flex<"div">;
  frame2992?: p.Flex<"div">;
  sectionTitle3?: p.Flex<"div">;
  frame2963?: p.Flex<"div">;
  group2999?: p.Flex<"div">;
  caretDown4?: p.Flex<"div">;
  filter4?: p.Flex<"div">;
  divider3?: p.Flex<"div">;
  earlyEducationApps?: p.Flex<"div">;
  appTile8?: p.Flex<"div">;
  frame2970?: p.Flex<"div">;
  appTile9?: p.Flex<"div">;
  frame2971?: p.Flex<"div">;
  appTile10?: p.Flex<"div">;
  frame2972?: p.Flex<"div">;
  appTile11?: p.Flex<"div">;
  frame2979?: p.Flex<"div">;
  appTile12?: p.Flex<"div">;
  frame2980?: p.Flex<"div">;
  appTile13?: p.Flex<"div">;
  frame2981?: p.Flex<"div">;
  sideToggle?: p.Flex<typeof SideToggle>;
};

export interface DefaultHomepageProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const stateSpecs: Parameters<typeof p.useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "textInput.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "" as const
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = p.useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        {true ? (
          <div
            data-plasmic-name={"root"}
            data-plasmic-override={overrides.root}
            data-plasmic-root={true}
            data-plasmic-for-node={forNode}
            className={classNames(
              projectcss.all,
              projectcss.root_reset,
              projectcss.plasmic_default_styles,
              projectcss.plasmic_mixins,
              projectcss.plasmic_tokens,
              sty.root
            )}
          >
            <Nav
              data-plasmic-name={"sideNav"}
              data-plasmic-override={overrides.sideNav}
              className={classNames("__wab_instance", sty.sideNav)}
            />

            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__ierjT)}>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame2976"}
                  data-plasmic-override={overrides.frame2976}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame2976)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame2975"}
                    data-plasmic-override={overrides.frame2975}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame2975)}
                  >
                    <div
                      data-plasmic-name={"_"}
                      data-plasmic-override={overrides._}
                      className={classNames(projectcss.all, sty._)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__lpYb
                        )}
                      >
                        {"\uf002"}
                      </div>
                    </div>
                    <TextInput
                      data-plasmic-name={"textInput"}
                      data-plasmic-override={overrides.textInput}
                      className={classNames("__wab_instance", sty.textInput)}
                      onChange={(...eventArgs) => {
                        p.generateStateOnChangeProp($state, [
                          "textInput",
                          "value"
                        ])((e => e.target?.value).apply(null, eventArgs));
                      }}
                      value={
                        p.generateStateValueProp($state, [
                          "textInput",
                          "value"
                        ]) ?? ""
                      }
                    />
                  </p.Stack>
                  <div
                    data-plasmic-name={"frame2974"}
                    data-plasmic-override={overrides.frame2974}
                    className={classNames(projectcss.all, sty.frame2974)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dnWe2
                      )}
                    >
                      {"BELL"}
                    </div>
                    <div
                      data-plasmic-name={"frame2973"}
                      data-plasmic-override={overrides.frame2973}
                      className={classNames(projectcss.all, sty.frame2973)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__tuJHr
                        )}
                      >
                        {"12"}
                      </div>
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"plusCircle"}
                    data-plasmic-override={overrides.plusCircle}
                    className={classNames(projectcss.all, sty.plusCircle)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jfIoz
                      )}
                    >
                      {"plus"}
                    </div>
                  </div>
                </p.Stack>
                <div
                  data-plasmic-name={"frame2977"}
                  data-plasmic-override={overrides.frame2977}
                  className={classNames(projectcss.all, sty.frame2977)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame2960"}
                    data-plasmic-override={overrides.frame2960}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame2960)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___2Bf96
                      )}
                    >
                      {"Recently Used"}
                    </div>
                    <div
                      data-plasmic-name={"group2996"}
                      data-plasmic-override={overrides.group2996}
                      className={classNames(projectcss.all, sty.group2996)}
                    >
                      <div
                        data-plasmic-name={"caretDown"}
                        data-plasmic-override={overrides.caretDown}
                        className={classNames(projectcss.all, sty.caretDown)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__nNp2W
                          )}
                        >
                          {"caret-down"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"filter"}
                        data-plasmic-override={overrides.filter}
                        className={classNames(projectcss.all, sty.filter)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__aL5Gz
                          )}
                        >
                          {"filter"}
                        </div>
                      </div>
                    </div>
                  </p.Stack>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__jC3Yn)}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ousIw
                    )}
                  >
                    {"chevron-down"}
                  </div>
                </div>
                {true ? (
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"recentlyUsed"}
                    data-plasmic-override={overrides.recentlyUsed}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.recentlyUsed)}
                  >
                    <div
                      data-plasmic-name={"appTile2"}
                      data-plasmic-override={overrides.appTile2}
                      className={classNames(projectcss.all, sty.appTile2)}
                      onClick={async event => {
                        const $steps = {};
                        $steps["goToPage"] = true
                          ? (() => {
                              const actionArgs = {};
                              return __wrapUserFunction(
                                {
                                  type: "InteractionLoc",
                                  actionName: "navigation",
                                  interactionUuid: "lGEdWVLXhmEf",
                                  componentUuid: "lwuRafVLqVKA"
                                },
                                () =>
                                  (({ destination }) => {
                                    location.assign(destination);
                                  })?.apply(null, [actionArgs]),
                                actionArgs
                              );
                            })()
                          : undefined;
                        if (
                          typeof $steps["goToPage"] === "object" &&
                          typeof $steps["goToPage"].then === "function"
                        ) {
                          $steps["goToPage"] = await __wrapUserPromise(
                            {
                              type: "InteractionLoc",
                              actionName: "navigation",
                              interactionUuid: "lGEdWVLXhmEf",
                              componentUuid: "lwuRafVLqVKA"
                            },
                            $steps["goToPage"]
                          );
                        }
                      }}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__enSop)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image4Z9O0QIBdeGa3,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2964"}
                        data-plasmic-override={overrides.frame2964}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2964)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ukKaE
                          )}
                        >
                          {"Pearson"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kdfvH
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                    <div
                      data-plasmic-name={"appTile3"}
                      data-plasmic-override={overrides.appTile3}
                      className={classNames(projectcss.all, sty.appTile3)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__uX8L)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image15IJmmhJbeups1,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2965"}
                        data-plasmic-override={overrides.frame2965}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2965)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wLobO
                          )}
                        >
                          {"Handshake"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__rz4Bx
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                    <div
                      data-plasmic-name={"appTile4"}
                      data-plasmic-override={overrides.appTile4}
                      className={classNames(projectcss.all, sty.appTile4)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___3HDjF)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image6AiVeWuD5LDui,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2966"}
                        data-plasmic-override={overrides.frame2966}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2966)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vdiVr
                          )}
                        >
                          {"Blackboard Learn"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kkVis
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                    <div
                      data-plasmic-name={"appTile7"}
                      data-plasmic-override={overrides.appTile7}
                      className={classNames(projectcss.all, sty.appTile7)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__vwrPl)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image147BdNLcYgwIk,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2969"}
                        data-plasmic-override={overrides.frame2969}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2969)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__szVGw
                          )}
                        >
                          {"Discovery \nEducation"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__py3Op
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                    <div
                      data-plasmic-name={"appTile5"}
                      data-plasmic-override={overrides.appTile5}
                      className={classNames(projectcss.all, sty.appTile5)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__v1Ffd)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image11N7KA0Dm3Cwt2,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2967"}
                        data-plasmic-override={overrides.frame2967}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2967)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kGd
                          )}
                        >
                          {"Udemy"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___5119I
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                    <div
                      data-plasmic-name={"appTile6"}
                      data-plasmic-override={overrides.appTile6}
                      className={classNames(projectcss.all, sty.appTile6)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__z8Ux)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image16CTnF8PjtojKh,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2968"}
                        data-plasmic-override={overrides.frame2968}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2968)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__riC0D
                          )}
                        >
                          {"TurnItIn"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__cga3Z
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                  </p.Stack>
                ) : null}
                <div
                  data-plasmic-name={"sectionTitle2"}
                  data-plasmic-override={overrides.sectionTitle2}
                  className={classNames(projectcss.all, sty.sectionTitle2)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame2962"}
                    data-plasmic-override={overrides.frame2962}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame2962)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wsaM8
                      )}
                    >
                      {"Early Education"}
                    </div>
                    <div
                      data-plasmic-name={"group2998"}
                      data-plasmic-override={overrides.group2998}
                      className={classNames(projectcss.all, sty.group2998)}
                    >
                      <div
                        data-plasmic-name={"caretDown3"}
                        data-plasmic-override={overrides.caretDown3}
                        className={classNames(projectcss.all, sty.caretDown3)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___4D5I
                          )}
                        >
                          {"caret-down"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"filter3"}
                        data-plasmic-override={overrides.filter3}
                        className={classNames(projectcss.all, sty.filter3)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__dynVn
                          )}
                        >
                          {"filter"}
                        </div>
                      </div>
                    </div>
                  </p.Stack>
                  <div
                    data-plasmic-name={"divider2"}
                    data-plasmic-override={overrides.divider2}
                    className={classNames(projectcss.all, sty.divider2)}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ilKPy
                    )}
                  >
                    {"chevron-down"}
                  </div>
                </div>
                {true ? (
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"earlyEducationApps2"}
                    data-plasmic-override={overrides.earlyEducationApps2}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      sty.earlyEducationApps2
                    )}
                  >
                    <div
                      data-plasmic-name={"appTile14"}
                      data-plasmic-override={overrides.appTile14}
                      className={classNames(projectcss.all, sty.appTile14)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__s1Gb9)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image30BlhbWxFq7QL,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2978"}
                        data-plasmic-override={overrides.frame2978}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2978)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tqkVs
                          )}
                        >
                          {"Hopscotch"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vJJxT
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                    <div
                      data-plasmic-name={"appTile15"}
                      data-plasmic-override={overrides.appTile15}
                      className={classNames(projectcss.all, sty.appTile15)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__zlDkl)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image8FYp5HkqOtLr4,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2982"}
                        data-plasmic-override={overrides.frame2982}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2982)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__nss8C
                          )}
                        >
                          {"Brainscape"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__lFjnj
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                    <div
                      data-plasmic-name={"appTile16"}
                      data-plasmic-override={overrides.appTile16}
                      className={classNames(projectcss.all, sty.appTile16)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__qJuD)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image262Kph0N29SgEc,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2983"}
                        data-plasmic-override={overrides.frame2983}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2983)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wJdEz
                          )}
                        >
                          {"Handshake"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__aoLh4
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                    <div
                      data-plasmic-name={"appTile17"}
                      data-plasmic-override={overrides.appTile17}
                      className={classNames(projectcss.all, sty.appTile17)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___4F4)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image29Q9YF8JPtFq1H,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2984"}
                        data-plasmic-override={overrides.frame2984}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2984)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__eP3MN
                          )}
                        >
                          {"Homer"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__mDeD6
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                    <div
                      data-plasmic-name={"appTile18"}
                      data-plasmic-override={overrides.appTile18}
                      className={classNames(projectcss.all, sty.appTile18)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___02JcR)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image13WgzCmtVwqgjl,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2985"}
                        data-plasmic-override={overrides.frame2985}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2985)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__qS35L
                          )}
                        >
                          {"Quizlet"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__fgtoh
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                    <div
                      data-plasmic-name={"appTile19"}
                      data-plasmic-override={overrides.appTile19}
                      className={classNames(projectcss.all, sty.appTile19)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__a90Pq)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image27HWJwoVuNJgw,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2986"}
                        data-plasmic-override={overrides.frame2986}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2986)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__aTd2X
                          )}
                        >
                          {"Lalilo "}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__jdYAm
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                  </p.Stack>
                ) : null}
                <div
                  data-plasmic-name={"sectionTitle"}
                  data-plasmic-override={overrides.sectionTitle}
                  className={classNames(projectcss.all, sty.sectionTitle)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame2961"}
                    data-plasmic-override={overrides.frame2961}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame2961)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___95M6
                      )}
                    >
                      {"Grade School Literacy"}
                    </div>
                    <div
                      data-plasmic-name={"group2997"}
                      data-plasmic-override={overrides.group2997}
                      className={classNames(projectcss.all, sty.group2997)}
                    >
                      <div
                        data-plasmic-name={"caretDown2"}
                        data-plasmic-override={overrides.caretDown2}
                        className={classNames(projectcss.all, sty.caretDown2)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__f8QnM
                          )}
                        >
                          {"caret-down"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"filter2"}
                        data-plasmic-override={overrides.filter2}
                        className={classNames(projectcss.all, sty.filter2)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__lNXj
                          )}
                        >
                          {"filter"}
                        </div>
                      </div>
                    </div>
                  </p.Stack>
                  <div
                    data-plasmic-name={"divider"}
                    data-plasmic-override={overrides.divider}
                    className={classNames(projectcss.all, sty.divider)}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__iLk2I
                    )}
                  >
                    {"chevron-down"}
                  </div>
                </div>
                {true ? (
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"earlyEducationApps3"}
                    data-plasmic-override={overrides.earlyEducationApps3}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      sty.earlyEducationApps3
                    )}
                  >
                    <div
                      data-plasmic-name={"appTile20"}
                      data-plasmic-override={overrides.appTile20}
                      className={classNames(projectcss.all, sty.appTile20)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__yobyl)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image24Hb3JfGp1Djg,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2987"}
                        data-plasmic-override={overrides.frame2987}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2987)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__t5X1L
                          )}
                        >
                          {"NewsELA"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___1KO94
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                    <div
                      data-plasmic-name={"appTile21"}
                      data-plasmic-override={overrides.appTile21}
                      className={classNames(projectcss.all, sty.appTile21)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__qbD0T)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image8FYp5HkqOtLr4,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2988"}
                        data-plasmic-override={overrides.frame2988}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2988)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__uEjKj
                          )}
                        >
                          {"Brainscape"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__h39FQ
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                    <div
                      data-plasmic-name={"appTile22"}
                      data-plasmic-override={overrides.appTile22}
                      className={classNames(projectcss.all, sty.appTile22)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__siOxJ)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image25Kyf4Jntno0Pr,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2989"}
                        data-plasmic-override={overrides.frame2989}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2989)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___4BEkx
                          )}
                        >
                          {"Kids A-Z"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__eLjC2
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                    <div
                      data-plasmic-name={"appTile23"}
                      data-plasmic-override={overrides.appTile23}
                      className={classNames(projectcss.all, sty.appTile23)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___79C5D)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image23YelEhQmAAuTx,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2990"}
                        data-plasmic-override={overrides.frame2990}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2990)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__sidfo
                          )}
                        >
                          {"Readworks"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__lazE
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                    <div
                      data-plasmic-name={"appTile24"}
                      data-plasmic-override={overrides.appTile24}
                      className={classNames(projectcss.all, sty.appTile24)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__hhYEd)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image22YixFx3Mxbmn,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2991"}
                        data-plasmic-override={overrides.frame2991}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2991)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__spDfe
                          )}
                        >
                          {"Epic"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ipXdr
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                    <div
                      data-plasmic-name={"appTile25"}
                      data-plasmic-override={overrides.appTile25}
                      className={classNames(projectcss.all, sty.appTile25)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__faRej)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image31XhT8RZyvUdTb,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2992"}
                        data-plasmic-override={overrides.frame2992}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2992)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__yfy3X
                          )}
                        >
                          {"Prodigy"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__hb9Sb
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                  </p.Stack>
                ) : null}
                <div
                  data-plasmic-name={"sectionTitle3"}
                  data-plasmic-override={overrides.sectionTitle3}
                  className={classNames(projectcss.all, sty.sectionTitle3)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame2963"}
                    data-plasmic-override={overrides.frame2963}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame2963)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__oUeR
                      )}
                    >
                      {"Foundations of Mathematics"}
                    </div>
                    <div
                      data-plasmic-name={"group2999"}
                      data-plasmic-override={overrides.group2999}
                      className={classNames(projectcss.all, sty.group2999)}
                    >
                      <div
                        data-plasmic-name={"caretDown4"}
                        data-plasmic-override={overrides.caretDown4}
                        className={classNames(projectcss.all, sty.caretDown4)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ee11D
                          )}
                        >
                          {"caret-down"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"filter4"}
                        data-plasmic-override={overrides.filter4}
                        className={classNames(projectcss.all, sty.filter4)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wAwVn
                          )}
                        >
                          {"filter"}
                        </div>
                      </div>
                    </div>
                  </p.Stack>
                  <div
                    data-plasmic-name={"divider3"}
                    data-plasmic-override={overrides.divider3}
                    className={classNames(projectcss.all, sty.divider3)}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ktEeX
                    )}
                  >
                    {"chevron-down"}
                  </div>
                </div>
                {true ? (
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"earlyEducationApps"}
                    data-plasmic-override={overrides.earlyEducationApps}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      sty.earlyEducationApps
                    )}
                  >
                    <div
                      data-plasmic-name={"appTile8"}
                      data-plasmic-override={overrides.appTile8}
                      className={classNames(projectcss.all, sty.appTile8)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__aByWw)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image21DwUh4ZVzg99M,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2970"}
                        data-plasmic-override={overrides.frame2970}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2970)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wdUdX
                          )}
                        >
                          {"Dreambox Math"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ucAvq
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                    <div
                      data-plasmic-name={"appTile9"}
                      data-plasmic-override={overrides.appTile9}
                      className={classNames(projectcss.all, sty.appTile9)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___2BzHu)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image18DRfd9AhsyuX,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2971"}
                        data-plasmic-override={overrides.frame2971}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2971)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__zGmiz
                          )}
                        >
                          {"Udemy"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tmyi
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                    <div
                      data-plasmic-name={"appTile10"}
                      data-plasmic-override={overrides.appTile10}
                      className={classNames(projectcss.all, sty.appTile10)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__vxzR)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image95Vz9RNpzfmhM,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2972"}
                        data-plasmic-override={overrides.frame2972}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2972)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___12AKy
                          )}
                        >
                          {"Chegg"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___0FWjk
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                    <div
                      data-plasmic-name={"appTile11"}
                      data-plasmic-override={overrides.appTile11}
                      className={classNames(projectcss.all, sty.appTile11)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___5Iuf)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image20JIqQXwL1Theq,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2979"}
                        data-plasmic-override={overrides.frame2979}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2979)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tXUiT
                          )}
                        >
                          {"MobyMax"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__uAycG
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                    <div
                      data-plasmic-name={"appTile12"}
                      data-plasmic-override={overrides.appTile12}
                      className={classNames(projectcss.all, sty.appTile12)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___2PWC)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image13WgzCmtVwqgjl,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2980"}
                        data-plasmic-override={overrides.frame2980}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2980)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__jbhiU
                          )}
                        >
                          {"Quizlet"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__bw0Zd
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                    <div
                      data-plasmic-name={"appTile13"}
                      data-plasmic-override={overrides.appTile13}
                      className={classNames(projectcss.all, sty.appTile13)}
                    >
                      {true ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__l6Ee8)}
                          displayHeight={"45px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"45px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image19F2OrtleMdwXl,
                            fullWidth: 153,
                            fullHeight: 150,
                            aspectRatio: 1.016667
                          }}
                        />
                      ) : null}
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame2981"}
                        data-plasmic-override={overrides.frame2981}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame2981)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__dIdp1
                          )}
                        >
                          {"IXL"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__rz67X
                          )}
                        >
                          {"ellipsis-v"}
                        </div>
                      </p.Stack>
                    </div>
                  </p.Stack>
                ) : null}
              </div>
            ) : null}
            {true ? (
              <SideToggle
                data-plasmic-name={"sideToggle"}
                data-plasmic-override={overrides.sideToggle}
                className={classNames("__wab_instance", sty.sideToggle)}
              />
            ) : null}
          </div>
        ) : null}
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "sideNav",
    "frame2976",
    "frame2975",
    "_",
    "textInput",
    "frame2974",
    "frame2973",
    "plusCircle",
    "frame2977",
    "frame2960",
    "group2996",
    "caretDown",
    "filter",
    "recentlyUsed",
    "appTile2",
    "frame2964",
    "appTile3",
    "frame2965",
    "appTile4",
    "frame2966",
    "appTile7",
    "frame2969",
    "appTile5",
    "frame2967",
    "appTile6",
    "frame2968",
    "sectionTitle2",
    "frame2962",
    "group2998",
    "caretDown3",
    "filter3",
    "divider2",
    "earlyEducationApps2",
    "appTile14",
    "frame2978",
    "appTile15",
    "frame2982",
    "appTile16",
    "frame2983",
    "appTile17",
    "frame2984",
    "appTile18",
    "frame2985",
    "appTile19",
    "frame2986",
    "sectionTitle",
    "frame2961",
    "group2997",
    "caretDown2",
    "filter2",
    "divider",
    "earlyEducationApps3",
    "appTile20",
    "frame2987",
    "appTile21",
    "frame2988",
    "appTile22",
    "frame2989",
    "appTile23",
    "frame2990",
    "appTile24",
    "frame2991",
    "appTile25",
    "frame2992",
    "sectionTitle3",
    "frame2963",
    "group2999",
    "caretDown4",
    "filter4",
    "divider3",
    "earlyEducationApps",
    "appTile8",
    "frame2970",
    "appTile9",
    "frame2971",
    "appTile10",
    "frame2972",
    "appTile11",
    "frame2979",
    "appTile12",
    "frame2980",
    "appTile13",
    "frame2981",
    "sideToggle"
  ],
  sideNav: ["sideNav"],
  frame2976: [
    "frame2976",
    "frame2975",
    "_",
    "textInput",
    "frame2974",
    "frame2973",
    "plusCircle"
  ],
  frame2975: ["frame2975", "_", "textInput"],
  _: ["_"],
  textInput: ["textInput"],
  frame2974: ["frame2974", "frame2973"],
  frame2973: ["frame2973"],
  plusCircle: ["plusCircle"],
  frame2977: ["frame2977", "frame2960", "group2996", "caretDown", "filter"],
  frame2960: ["frame2960", "group2996", "caretDown", "filter"],
  group2996: ["group2996", "caretDown", "filter"],
  caretDown: ["caretDown"],
  filter: ["filter"],
  recentlyUsed: [
    "recentlyUsed",
    "appTile2",
    "frame2964",
    "appTile3",
    "frame2965",
    "appTile4",
    "frame2966",
    "appTile7",
    "frame2969",
    "appTile5",
    "frame2967",
    "appTile6",
    "frame2968"
  ],
  appTile2: ["appTile2", "frame2964"],
  frame2964: ["frame2964"],
  appTile3: ["appTile3", "frame2965"],
  frame2965: ["frame2965"],
  appTile4: ["appTile4", "frame2966"],
  frame2966: ["frame2966"],
  appTile7: ["appTile7", "frame2969"],
  frame2969: ["frame2969"],
  appTile5: ["appTile5", "frame2967"],
  frame2967: ["frame2967"],
  appTile6: ["appTile6", "frame2968"],
  frame2968: ["frame2968"],
  sectionTitle2: [
    "sectionTitle2",
    "frame2962",
    "group2998",
    "caretDown3",
    "filter3",
    "divider2"
  ],
  frame2962: ["frame2962", "group2998", "caretDown3", "filter3"],
  group2998: ["group2998", "caretDown3", "filter3"],
  caretDown3: ["caretDown3"],
  filter3: ["filter3"],
  divider2: ["divider2"],
  earlyEducationApps2: [
    "earlyEducationApps2",
    "appTile14",
    "frame2978",
    "appTile15",
    "frame2982",
    "appTile16",
    "frame2983",
    "appTile17",
    "frame2984",
    "appTile18",
    "frame2985",
    "appTile19",
    "frame2986"
  ],
  appTile14: ["appTile14", "frame2978"],
  frame2978: ["frame2978"],
  appTile15: ["appTile15", "frame2982"],
  frame2982: ["frame2982"],
  appTile16: ["appTile16", "frame2983"],
  frame2983: ["frame2983"],
  appTile17: ["appTile17", "frame2984"],
  frame2984: ["frame2984"],
  appTile18: ["appTile18", "frame2985"],
  frame2985: ["frame2985"],
  appTile19: ["appTile19", "frame2986"],
  frame2986: ["frame2986"],
  sectionTitle: [
    "sectionTitle",
    "frame2961",
    "group2997",
    "caretDown2",
    "filter2",
    "divider"
  ],
  frame2961: ["frame2961", "group2997", "caretDown2", "filter2"],
  group2997: ["group2997", "caretDown2", "filter2"],
  caretDown2: ["caretDown2"],
  filter2: ["filter2"],
  divider: ["divider"],
  earlyEducationApps3: [
    "earlyEducationApps3",
    "appTile20",
    "frame2987",
    "appTile21",
    "frame2988",
    "appTile22",
    "frame2989",
    "appTile23",
    "frame2990",
    "appTile24",
    "frame2991",
    "appTile25",
    "frame2992"
  ],
  appTile20: ["appTile20", "frame2987"],
  frame2987: ["frame2987"],
  appTile21: ["appTile21", "frame2988"],
  frame2988: ["frame2988"],
  appTile22: ["appTile22", "frame2989"],
  frame2989: ["frame2989"],
  appTile23: ["appTile23", "frame2990"],
  frame2990: ["frame2990"],
  appTile24: ["appTile24", "frame2991"],
  frame2991: ["frame2991"],
  appTile25: ["appTile25", "frame2992"],
  frame2992: ["frame2992"],
  sectionTitle3: [
    "sectionTitle3",
    "frame2963",
    "group2999",
    "caretDown4",
    "filter4",
    "divider3"
  ],
  frame2963: ["frame2963", "group2999", "caretDown4", "filter4"],
  group2999: ["group2999", "caretDown4", "filter4"],
  caretDown4: ["caretDown4"],
  filter4: ["filter4"],
  divider3: ["divider3"],
  earlyEducationApps: [
    "earlyEducationApps",
    "appTile8",
    "frame2970",
    "appTile9",
    "frame2971",
    "appTile10",
    "frame2972",
    "appTile11",
    "frame2979",
    "appTile12",
    "frame2980",
    "appTile13",
    "frame2981"
  ],
  appTile8: ["appTile8", "frame2970"],
  frame2970: ["frame2970"],
  appTile9: ["appTile9", "frame2971"],
  frame2971: ["frame2971"],
  appTile10: ["appTile10", "frame2972"],
  frame2972: ["frame2972"],
  appTile11: ["appTile11", "frame2979"],
  frame2979: ["frame2979"],
  appTile12: ["appTile12", "frame2980"],
  frame2980: ["frame2980"],
  appTile13: ["appTile13", "frame2981"],
  frame2981: ["frame2981"],
  sideToggle: ["sideToggle"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  sideNav: typeof Nav;
  frame2976: "div";
  frame2975: "div";
  _: "div";
  textInput: typeof TextInput;
  frame2974: "div";
  frame2973: "div";
  plusCircle: "div";
  frame2977: "div";
  frame2960: "div";
  group2996: "div";
  caretDown: "div";
  filter: "div";
  recentlyUsed: "div";
  appTile2: "div";
  frame2964: "div";
  appTile3: "div";
  frame2965: "div";
  appTile4: "div";
  frame2966: "div";
  appTile7: "div";
  frame2969: "div";
  appTile5: "div";
  frame2967: "div";
  appTile6: "div";
  frame2968: "div";
  sectionTitle2: "div";
  frame2962: "div";
  group2998: "div";
  caretDown3: "div";
  filter3: "div";
  divider2: "div";
  earlyEducationApps2: "div";
  appTile14: "div";
  frame2978: "div";
  appTile15: "div";
  frame2982: "div";
  appTile16: "div";
  frame2983: "div";
  appTile17: "div";
  frame2984: "div";
  appTile18: "div";
  frame2985: "div";
  appTile19: "div";
  frame2986: "div";
  sectionTitle: "div";
  frame2961: "div";
  group2997: "div";
  caretDown2: "div";
  filter2: "div";
  divider: "div";
  earlyEducationApps3: "div";
  appTile20: "div";
  frame2987: "div";
  appTile21: "div";
  frame2988: "div";
  appTile22: "div";
  frame2989: "div";
  appTile23: "div";
  frame2990: "div";
  appTile24: "div";
  frame2991: "div";
  appTile25: "div";
  frame2992: "div";
  sectionTitle3: "div";
  frame2963: "div";
  group2999: "div";
  caretDown4: "div";
  filter4: "div";
  divider3: "div";
  earlyEducationApps: "div";
  appTile8: "div";
  frame2970: "div";
  appTile9: "div";
  frame2971: "div";
  appTile10: "div";
  frame2972: "div";
  appTile11: "div";
  frame2979: "div";
  appTile12: "div";
  frame2980: "div";
  appTile13: "div";
  frame2981: "div";
  sideToggle: typeof SideToggle;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    sideNav: makeNodeComponent("sideNav"),
    frame2976: makeNodeComponent("frame2976"),
    frame2975: makeNodeComponent("frame2975"),
    _: makeNodeComponent("_"),
    textInput: makeNodeComponent("textInput"),
    frame2974: makeNodeComponent("frame2974"),
    frame2973: makeNodeComponent("frame2973"),
    plusCircle: makeNodeComponent("plusCircle"),
    frame2977: makeNodeComponent("frame2977"),
    frame2960: makeNodeComponent("frame2960"),
    group2996: makeNodeComponent("group2996"),
    caretDown: makeNodeComponent("caretDown"),
    filter: makeNodeComponent("filter"),
    recentlyUsed: makeNodeComponent("recentlyUsed"),
    appTile2: makeNodeComponent("appTile2"),
    frame2964: makeNodeComponent("frame2964"),
    appTile3: makeNodeComponent("appTile3"),
    frame2965: makeNodeComponent("frame2965"),
    appTile4: makeNodeComponent("appTile4"),
    frame2966: makeNodeComponent("frame2966"),
    appTile7: makeNodeComponent("appTile7"),
    frame2969: makeNodeComponent("frame2969"),
    appTile5: makeNodeComponent("appTile5"),
    frame2967: makeNodeComponent("frame2967"),
    appTile6: makeNodeComponent("appTile6"),
    frame2968: makeNodeComponent("frame2968"),
    sectionTitle2: makeNodeComponent("sectionTitle2"),
    frame2962: makeNodeComponent("frame2962"),
    group2998: makeNodeComponent("group2998"),
    caretDown3: makeNodeComponent("caretDown3"),
    filter3: makeNodeComponent("filter3"),
    divider2: makeNodeComponent("divider2"),
    earlyEducationApps2: makeNodeComponent("earlyEducationApps2"),
    appTile14: makeNodeComponent("appTile14"),
    frame2978: makeNodeComponent("frame2978"),
    appTile15: makeNodeComponent("appTile15"),
    frame2982: makeNodeComponent("frame2982"),
    appTile16: makeNodeComponent("appTile16"),
    frame2983: makeNodeComponent("frame2983"),
    appTile17: makeNodeComponent("appTile17"),
    frame2984: makeNodeComponent("frame2984"),
    appTile18: makeNodeComponent("appTile18"),
    frame2985: makeNodeComponent("frame2985"),
    appTile19: makeNodeComponent("appTile19"),
    frame2986: makeNodeComponent("frame2986"),
    sectionTitle: makeNodeComponent("sectionTitle"),
    frame2961: makeNodeComponent("frame2961"),
    group2997: makeNodeComponent("group2997"),
    caretDown2: makeNodeComponent("caretDown2"),
    filter2: makeNodeComponent("filter2"),
    divider: makeNodeComponent("divider"),
    earlyEducationApps3: makeNodeComponent("earlyEducationApps3"),
    appTile20: makeNodeComponent("appTile20"),
    frame2987: makeNodeComponent("frame2987"),
    appTile21: makeNodeComponent("appTile21"),
    frame2988: makeNodeComponent("frame2988"),
    appTile22: makeNodeComponent("appTile22"),
    frame2989: makeNodeComponent("frame2989"),
    appTile23: makeNodeComponent("appTile23"),
    frame2990: makeNodeComponent("frame2990"),
    appTile24: makeNodeComponent("appTile24"),
    frame2991: makeNodeComponent("frame2991"),
    appTile25: makeNodeComponent("appTile25"),
    frame2992: makeNodeComponent("frame2992"),
    sectionTitle3: makeNodeComponent("sectionTitle3"),
    frame2963: makeNodeComponent("frame2963"),
    group2999: makeNodeComponent("group2999"),
    caretDown4: makeNodeComponent("caretDown4"),
    filter4: makeNodeComponent("filter4"),
    divider3: makeNodeComponent("divider3"),
    earlyEducationApps: makeNodeComponent("earlyEducationApps"),
    appTile8: makeNodeComponent("appTile8"),
    frame2970: makeNodeComponent("frame2970"),
    appTile9: makeNodeComponent("appTile9"),
    frame2971: makeNodeComponent("frame2971"),
    appTile10: makeNodeComponent("appTile10"),
    frame2972: makeNodeComponent("frame2972"),
    appTile11: makeNodeComponent("appTile11"),
    frame2979: makeNodeComponent("frame2979"),
    appTile12: makeNodeComponent("appTile12"),
    frame2980: makeNodeComponent("frame2980"),
    appTile13: makeNodeComponent("appTile13"),
    frame2981: makeNodeComponent("frame2981"),
    sideToggle: makeNodeComponent("sideToggle"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
